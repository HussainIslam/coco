###########
# BUILDER #
###########

# pull official base image
FROM python:3.6 as builder

# set work directory
WORKDIR /code

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# lint
RUN apt-get update -y
COPY Pipfile Pipfile.lock ./
RUN pip install --upgrade pip \
    && pip install pipenv flake8\
    && pipenv install --system --deploy
COPY . ./
#RUN flake8 --ignore=E501,F401 .

# install dependencies
RUN pipenv lock -r > reqs.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /code/wheels -r reqs.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.6

RUN echo ``
RUN echo "`ls /home`"


# create directory for the app user
RUN mkdir -p /home/coco_admin

# create the app user
RUN addgroup --system coco_group && adduser -system coco_admin --ingroup coco_group

# create the appropriate directories
ENV HOME=/home/coco_admin
ENV APP_HOME=/code
RUN mkdir $APP_HOME
RUN mkdir ${APP_HOME}/staticfiles
RUN mkdir ${APP_HOME}/media
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update -y && apt-get install -f -y postgresql-client
#RUN apt install libpq -y
COPY --from=builder /code/wheels /wheels
COPY --from=builder /code/Pipfile .
COPY --from=builder /code/Pipfile.lock .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R coco_admin:coco_group $APP_HOME

# change to the app user
USER coco_admin

# run entrypoint.prod.sh
ENTRYPOINT ["/code/entrypoint.prod.sh"]